VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "cFreteReceber"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_Ext_KEY = "SavedWithClassBuilder" ,"Yes"
Attribute VB_Ext_KEY = "Top_Level" ,"Yes"
Option Explicit

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''
''
''  Implementation of the  Class cFreteReceber
''  Generated by Enterprise Architect
''  Created on:      23-ago-2006 10:10:11
''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


Private mlngNumeroConhecimento      As Long
Private mstrTipoRegistro            As String
'pt. 86013 - Ivo Sousa(26/05/2008)
Private mlngCodigoTransportadora    As Long
Private mdatEmissao                 As Date
Private mstrCodigoRemetente         As String
Private mstrCodigoDestinatario      As String
Private mstrCodigoConsignatario     As String
Private mstrCodigoRedespacho        As Long
Private mstrCodigoCfop              As String
Private mstrCodigoCfopVar           As String
Private mdblDistancia               As Double
''(C)CIF, (F)Fob
Private mstrTipoFrete               As String
Private mdblQuantidadeProdutos      As Double
Private mdblPorcentagemTarifa       As Double
Private mdblValorPedagio            As Double
Private mdblValorSeguro             As Double
Private mdblValorOutros             As Double
Private mdblValorAcrescimo          As Double
Private mdblValorDesconto           As Double
Private mdblValorIsentas            As Double
Private mdblValorConhecimento       As Double
Private mdblValorBaseICMS           As Double
Private mdblPorcentagemICMS         As Double
Private mdblValorICMS               As Double
Private mobjEntrega                 As cEndereco
Private mobjColeta                  As cEndereco
Private mstrSituacao                As String
Private mstrObs                     As String
Private mobjMercadorias             As cColecaoFreteMercadoriaReceber
Private mobjMotoristas              As cColecaoMotoristaFreteReceber
Private mobjTitulo                  As cTitulo
Private mbooPermiteAlteracao        As Boolean
Private mdblValorFrete              As Double
Private mlngOperacaoContabil        As Long
'pt. 92345 - Ivo Sousa (16/04/2009)
Private mlngContaFinanceira         As Long
Private mlngCentroCusto             As Long
Private mlngSeqConhecimento         As Long
Private mstrTipoCTe                 As String
Private mstrTipoServico             As String
Private mblnRetira                  As String
Private mstrTomador                 As String
Private mstrSitTributariaICMS       As String
Private mstrProdPredominante        As String
Private mobjCTeInformacoesCarga     As clsCTeInformacoesCarga
'Projeto: #7373 - História: #7973 - Desenvolvimento: #7976 - Ivo Sousa(15/05/2013)
Private mobjCTeInformacoesSeguro    As clsCTeINformacoesSeguro
Private mstrMotivoCanc              As String
Private mstrUserCanc                As String
Private mdatDateCanc                As Date
Private mstrXMLGeracao              As String
'Projeto: #8153 - História: #8398 - Desenvolvimento#8402 - Moacir Pfau(03/06/2013)
Private mdblpr_ibpt                 As Double
Private mdblTotal_ibpt              As Double
Private mstrVersao_IBPT             As String
'Projeto: #8153 - História: #8626 - Desenvolvimento#8627 - Moacir Pfau(07/06/2013)
Private mlngCd_servico              As Long
'Projeto: #11743 - História: #(Item não planejado) - Desenvolvimento: #0 - Ivo Sousa(19/09/2013)
Private mintAliquotaICMSSTCTRC      As Integer
Private mdblMVAICMSSTCTRC           As Double
Private mcurBaseICMSSTCTRC          As Currency
Private mcurValorICMSSTCTRC         As Currency
'Projeto: 100340 - Desenv.: 173645 - Ueder Budni (29/05/2017)
Private mdblPercRedBase             As Double
Private mdblPercRedAliq             As Double
Private mdblValorBaseICMSReduzida   As Double
Private mdblValorICMSDiferido       As Double
' 23/01/2020 - HyperCube: INC-9528 - Yuji F. - Possibilitando que a alteração dos impostos seja exibida corretamente
Private bImpostoManual As Boolean

Public Sub Class_Initialize()
    Set mobjMercadorias = New cColecaoFreteMercadoriaReceber
    Set mobjMotoristas = New cColecaoMotoristaFreteReceber
    Set mobjTitulo = New cTitulo
    Set mobjCTeInformacoesCarga = New clsCTeInformacoesCarga
    mbooPermiteAlteracao = True
    bImpostoManual = False
End Sub

Public Property Get coleta() As cEndereco
    Set coleta = mobjColeta
End Property

Public Property Let coleta(ByVal NewVal As cEndereco)
    Set mobjColeta = NewVal
End Property

Public Property Get Entrega() As cEndereco
    Set Entrega = mobjEntrega
End Property

Public Property Let Entrega(ByVal NewVal As cEndereco)
    Set mobjEntrega = NewVal
End Property

Public Property Let codigoCfop(ByVal NewVal As String)
    mstrCodigoCfop = NewVal
End Property

Public Property Get codigoCfop() As String
    codigoCfop = mstrCodigoCfop
End Property

Public Property Get codigoCfopVar() As String
    codigoCfopVar = mstrCodigoCfopVar
End Property

Public Property Let codigoCfopVar(ByVal NewVal As String)
    mstrCodigoCfopVar = NewVal
End Property

Public Property Get codigoConsignatario() As String
    codigoConsignatario = mstrCodigoConsignatario
End Property

Public Property Let codigoConsignatario(ByVal NewVal As String)
    mstrCodigoConsignatario = NewVal
End Property

Public Property Get codigoRedespacho() As Long
    codigoRedespacho = mstrCodigoRedespacho
End Property

Public Property Let codigoRedespacho(ByVal NewVal As Long)
    mstrCodigoRedespacho = NewVal
End Property

Public Property Get codigoRemetente() As String
    codigoRemetente = mstrCodigoRemetente
End Property

Public Property Let codigoRemetente(ByVal NewVal As String)
    mstrCodigoRemetente = NewVal
End Property

Public Property Get distancia() As Double
    distancia = mdblDistancia
End Property

Public Property Let distancia(ByVal NewVal As Double)
    mdblDistancia = NewVal
End Property

Public Property Get Emissao() As Date
    Emissao = mdatEmissao
End Property

Public Property Let Emissao(ByVal NewVal As Date)
    mdatEmissao = NewVal
End Property

Public Property Get numeroConhecimento() As Long
    numeroConhecimento = mlngNumeroConhecimento
End Property

Public Property Let numeroConhecimento(ByVal NewVal As Long)
    mlngNumeroConhecimento = NewVal
End Property

Public Property Let Obs(ByVal NewVal As String)
    mstrObs = NewVal
End Property

Public Property Get Obs() As String
    Obs = mstrObs
End Property

Public Property Get porcentagemICMS() As Double
    porcentagemICMS = mdblPorcentagemICMS
End Property

Public Property Let porcentagemICMS(ByVal NewVal As Double)
    mdblPorcentagemICMS = NewVal
End Property

Public Property Let porcentagemTarifa(ByVal NewVal As Double)
    mdblPorcentagemTarifa = NewVal
End Property

Public Property Get porcentagemTarifa() As Double
    porcentagemTarifa = mdblPorcentagemTarifa
End Property

Public Property Let quantidadeProdutos(ByVal NewVal As Double)
    mdblQuantidadeProdutos = NewVal
End Property

Public Property Get quantidadeProdutos() As Double
        quantidadeProdutos = mdblQuantidadeProdutos
End Property

Public Property Let situacao(ByVal NewVal As String)
    mstrSituacao = NewVal
End Property

Public Property Get situacao() As String
    situacao = mstrSituacao
End Property

Public Property Get tipoFrete() As String
    tipoFrete = mstrTipoFrete
End Property

Public Property Let tipoFrete(ByVal NewVal As String)
    mstrTipoFrete = NewVal
End Property

Public Property Get TipoRegistro() As String
    TipoRegistro = mstrTipoRegistro
End Property

Public Property Let TipoRegistro(ByVal NewVal As String)
    mstrTipoRegistro = NewVal
End Property

Public Property Let valorAcrescimo(ByVal NewVal As Double)
    mdblValorAcrescimo = NewVal
End Property

Public Property Get valorAcrescimo() As Double
    valorAcrescimo = mdblValorAcrescimo
End Property

Public Property Get valorBaseICMS() As Double
    valorBaseICMS = mdblValorBaseICMS
End Property

Public Property Let valorBaseICMS(ByVal NewVal As Double)
    mdblValorBaseICMS = NewVal
End Property

Public Property Get valorConhecimento() As Double
    valorConhecimento = mdblValorConhecimento
End Property

Public Property Let valorConhecimento(ByVal NewVal As Double)
    mdblValorConhecimento = NewVal
End Property

Public Property Get ValorDesconto() As Double
    ValorDesconto = mdblValorDesconto
End Property

Public Property Let ValorDesconto(ByVal NewVal As Double)
    mdblValorDesconto = NewVal
End Property

Public Property Get ValorICMS() As Double
    ValorICMS = mdblValorICMS
End Property

Public Property Let ValorICMS(ByVal NewVal As Double)
    mdblValorICMS = NewVal
End Property

Public Property Let valorIsentas(ByVal NewVal As Double)
    mdblValorIsentas = NewVal
End Property

Public Property Get valorIsentas() As Double
    valorIsentas = mdblValorIsentas
End Property

Public Property Get ValorOutros() As Double
    ValorOutros = mdblValorOutros
End Property

Public Property Let ValorOutros(ByVal NewVal As Double)
    mdblValorOutros = NewVal
End Property

Public Property Let valorPedagio(ByVal NewVal As Double)
    mdblValorPedagio = NewVal
End Property

Public Property Get valorPedagio() As Double
    valorPedagio = mdblValorPedagio
End Property

Public Property Let ValorSeguro(ByVal NewVal As Double)
    mdblValorSeguro = NewVal
End Property

Public Property Get ValorSeguro() As Double
    ValorSeguro = mdblValorSeguro
End Property

Public Property Get mercadorias() As cColecaoFreteMercadoriaReceber
    Set mercadorias = mobjMercadorias
End Property

Public Property Let mercadorias(ByVal NewVal As cColecaoFreteMercadoriaReceber)
    Set mobjMercadorias = NewVal
End Property

Public Property Get motoristas() As cColecaoMotoristaFreteReceber
    Set motoristas = mobjMotoristas
End Property

Public Property Let motoristas(ByVal NewVal As cColecaoMotoristaFreteReceber)
    Set mobjMotoristas = NewVal
End Property

Public Property Get Titulo() As cTitulo
    Set Titulo = mobjTitulo
End Property

Public Property Let Titulo(ByVal NewVal As cTitulo)
    Set mobjTitulo = NewVal
End Property

Public Property Get codigoDestinatario() As String
    codigoDestinatario = mstrCodigoDestinatario
End Property

Public Property Let codigoDestinatario(ByVal NewVal As String)
    mstrCodigoDestinatario = NewVal
End Property

Public Property Get PermiteAlteracao() As Boolean
    PermiteAlteracao = mbooPermiteAlteracao
End Property

Public Property Let PermiteAlteracao(ByVal NewVal As Boolean)
    mbooPermiteAlteracao = NewVal
End Property

Public Property Get ValorFrete() As Double
    ValorFrete = mdblValorFrete
End Property

Public Property Let ValorFrete(ByVal NewVal As Double)
    mdblValorFrete = NewVal
End Property

Public Property Get OperacaoContabil() As Long
    OperacaoContabil = mlngOperacaoContabil
End Property

Public Property Let OperacaoContabil(ByVal NewVal As Long)
    mlngOperacaoContabil = NewVal
End Property

Public Property Get codigoTransportadora() As Long
    codigoTransportadora = mlngCodigoTransportadora
End Property

Public Property Let codigoTransportadora(ByVal NewVal As Long)
    mlngCodigoTransportadora = NewVal
End Property

'pt. 92345 - Ivo Sousa (16/04/2009)
Public Property Get ContaFinanceira() As Long
    ContaFinanceira = mlngContaFinanceira
End Property

Public Property Let ContaFinanceira(ByVal NewVal As Long)
    mlngContaFinanceira = NewVal
End Property

Public Property Get CentroCusto() As Long
    CentroCusto = mlngCentroCusto
End Property

Public Property Let CentroCusto(ByVal NewVal As Long)
    mlngCentroCusto = NewVal
End Property

Public Property Get SeqConhecimento() As Long
    SeqConhecimento = mlngSeqConhecimento
End Property

Public Property Let SeqConhecimento(ByVal NewVal As Long)
    mlngSeqConhecimento = NewVal
End Property

'------------------------------------------------------------Inicio das Alterações--------------------------------------------------------
Public Property Get TipoCTe() As String
    TipoCTe = mstrTipoCTe
End Property

Public Property Let TipoCTe(ByVal NewVal As String)
    mstrTipoCTe = NewVal
End Property

Public Property Get TipoServico() As String
    TipoServico = mstrTipoServico
End Property

Public Property Let TipoServico(ByVal NewVal As String)
    mstrTipoServico = NewVal
End Property

Public Property Get Retira() As Boolean
    Retira = mblnRetira
End Property

Public Property Let Retira(ByVal NewVal As Boolean)
    mblnRetira = NewVal
End Property

Public Property Get Tomador() As String
    Tomador = mstrTomador
End Property

Public Property Let Tomador(ByVal NewVal As String)
    mstrTomador = NewVal
End Property

Public Property Get SitTributariaICMS() As String
    SitTributariaICMS = mstrSitTributariaICMS
End Property

Public Property Let SitTributariaICMS(ByVal NewVal As String)
    mstrSitTributariaICMS = NewVal
End Property

'pt. 95345 - Ivo Sousa (15/08/2010)
Public Property Get InformacoesCarga() As clsCTeInformacoesCarga
    Set InformacoesCarga = mobjCTeInformacoesCarga
End Property

Public Property Let InformacoesCarga(ByVal NewVal As clsCTeInformacoesCarga)
    Set mobjCTeInformacoesCarga = NewVal
End Property

'Projeto: #7373 - História: #7973 - Desenvolvimento: #7976 - Ivo Sousa(15/05/2013)
Public Property Get InformacoesSeguro() As clsCTeINformacoesSeguro
    Set InformacoesSeguro = mobjCTeInformacoesSeguro
End Property

Public Property Let InformacoesSeguro(ByVal NewVal As clsCTeINformacoesSeguro)
    Set mobjCTeInformacoesSeguro = NewVal
End Property

Public Property Get MotivoCanc() As String
    MotivoCanc = mstrMotivoCanc
End Property

Public Property Let MotivoCanc(ByVal NewVal As String)
    mstrMotivoCanc = NewVal
End Property

Public Property Get UserCanc() As String
    UserCanc = mstrUserCanc
End Property

Public Property Let UserCanc(ByVal NewVal As String)
    mstrUserCanc = NewVal
End Property

Public Property Get DateCanc() As Date
    DateCanc = mdatDateCanc
End Property

Public Property Let DateCanc(ByVal NewVal As Date)
    mdatDateCanc = NewVal
End Property

Public Property Get XMLGeracao() As String
    XMLGeracao = mstrXMLGeracao
End Property

Public Property Let XMLGeracao(ByVal NewVal As String)
    mstrXMLGeracao = NewVal
End Property

'Projeto: #8153 - História: #8423 - Desenvolvimento#8424 - Moacir Pfau(03/06/2013)
Public Property Get pr_ibpt() As Double
    pr_ibpt = mdblpr_ibpt
End Property

Public Property Let pr_ibpt(ByVal Valor As Double)
    mdblpr_ibpt = Valor
End Property

Public Property Get Total_ibpt() As Double
    Total_ibpt = mdblTotal_ibpt
End Property

Public Property Let Total_ibpt(ByVal Valor As Double)
    mdblTotal_ibpt = Valor
End Property

Public Property Get Versao_IBPT() As String
    Versao_IBPT = mstrVersao_IBPT
End Property

Public Property Let Versao_IBPT(ByVal Valor As String)
    mstrVersao_IBPT = Valor
End Property

'Projeto: #8153 - História: #8626 - Desenvolvimento#8627 - Moacir Pfau(07/06/2013)
Public Property Get Cd_servico() As Long
    Cd_servico = mlngCd_servico
End Property

Public Property Let Cd_servico(ByVal Valor As Long)
    mlngCd_servico = Valor
End Property

'Projeto: #11743 - História: #(Item não planejado) - Desenvolvimento: #0 - Ivo Sousa(19/09/2013)
Public Property Get AliquotaICMSSTCTRC() As Integer
    AliquotaICMSSTCTRC = mintAliquotaICMSSTCTRC
End Property

Public Property Let AliquotaICMSSTCTRC(ByVal NewVal As Integer)
    mintAliquotaICMSSTCTRC = NewVal
End Property

Public Property Get MVAICMSSTCTRC() As Double
    MVAICMSSTCTRC = mdblMVAICMSSTCTRC
End Property

Public Property Let MVAICMSSTCTRC(ByVal NewVal As Double)
    mdblMVAICMSSTCTRC = NewVal
End Property

Public Property Get BaseICMSSTCTRC() As Currency
    BaseICMSSTCTRC = mcurBaseICMSSTCTRC
End Property

Public Property Let BaseICMSSTCTRC(ByVal NewVal As Currency)
    mcurBaseICMSSTCTRC = NewVal
End Property

Public Property Get ValorICMSSTCTRC() As Currency
    ValorICMSSTCTRC = mcurValorICMSSTCTRC
End Property

Public Property Let ValorICMSSTCTRC(ByVal NewVal As Currency)
    mcurValorICMSSTCTRC = NewVal
End Property

'Projeto: 100340 - Desenv.: 173645 - Ueder Budni (29/05/2017)
Public Property Get PercRedBase() As Double
    PercRedBase = mdblPercRedBase
End Property

Public Property Let PercRedBase(NewVal As Double)
    mdblPercRedBase = NewVal
End Property

Public Property Get PercRedAliq() As Double
    PercRedAliq = mdblPercRedAliq
End Property

Public Property Let PercRedAliq(NewVal As Double)
    mdblPercRedAliq = NewVal
End Property

Public Property Get BaseICMSReduzida() As Double
    BaseICMSReduzida = mdblValorBaseICMSReduzida
End Property

Public Property Let BaseICMSReduzida(NewVal As Double)
    mdblValorBaseICMSReduzida = NewVal
End Property

Public Property Get ValorICMSDiferido() As Double
    ValorICMSDiferido = mdblValorICMSDiferido
End Property

Public Property Let ValorICMSDiferido(NewVal As Double)
    mdblValorICMSDiferido = NewVal
End Property

Public Property Get ImpostoManual() As Boolean
    ImpostoManual = bImpostoManual
End Property

Public Property Let ImpostoManual(ByVal NewVal As Boolean)
    bImpostoManual = NewVal
End Property

Public Function CriarObjeto(rd As IDBReader) As cFreteReceber
    Dim daoEstado               As New cEstadoDAO

    With rd
        mlngNumeroConhecimento = .GetLong("nr_conhecimento")
        mstrTipoRegistro = .GetString("tp_registro")
        mdatEmissao = .GetDate("dt_emissao")
        mstrCodigoRemetente = .GetString("cd_remetente")
        mstrCodigoDestinatario = .GetString("cd_destinatario")
        mstrCodigoConsignatario = .GetString("cd_consignatario")
        mstrCodigoRedespacho = .GetLong("cd_redespacho")
        mstrCodigoCfop = .GetString("cd_cfop")
        mstrCodigoCfopVar = .GetString("cd_cfopVar")
        mdblDistancia = .GetDouble("distancia")
        mstrTipoFrete = .GetString("tp_frete")
        mdblQuantidadeProdutos = .GetDouble("qt_produtos")
        mdblPorcentagemTarifa = .GetDouble("pr_tarifa")
        mdblValorPedagio = .GetDouble("vl_pedagio")
        mdblValorSeguro = .GetDouble("vl_seguro")
        mdblValorOutros = .GetDouble("vl_outros")
        mdblValorAcrescimo = .GetDouble("vl_acrescimo")
        mdblValorDesconto = .GetDouble("vl_desconto")
        mdblValorIsentas = .GetDouble("vl_isentas")
        mdblValorConhecimento = .GetDouble("vl_conhecimento")
        mdblValorBaseICMS = .GetDouble("vl_base_icms")
        mdblPorcentagemICMS = .GetDouble("pr_icms")
        mdblValorICMS = .GetDouble("vl_icms")
        mstrSituacao = .GetString("situacao")
        mstrObs = .GetString("obs")
        mdblValorFrete = .GetDouble("vl_frete")
        mlngOperacaoContabil = .GetLong("cd_operacao_contabil")
        'pt. 92345 - Ivo Sousa (16/04/2009)
        mlngCentroCusto = .GetDouble("centro_custo")
        mlngContaFinanceira = .GetDouble("conta_financeira")
        mlngCodigoTransportadora = CodigoEmpresa
        'pt. 95345 - Ivo Sousa (09/07/2010)
        mblnRetira = .GetString("retira")
        mstrTipoServico = .GetString("tipo_servico")
        mstrTipoCTe = .GetString("tipo_cte")
        'Ivo Sousa(16/02/2010)
        mlngSeqConhecimento = .GetLong("seq_conhecimento")
        mstrSitTributariaICMS = .GetString("cst_icms")
        mstrMotivoCanc = .GetString("motivo_cancelamento")
        mstrUserCanc = .GetString("user_canc")
        mdatDateCanc = .GetDate("date_canc")
        mstrXMLGeracao = .GetString("xml_geracao")
        'Projeto: #8153 - História: #8398 - Desenvolvimento#8402 - Moacir Pfau(03/06/2013)
        mdblTotal_ibpt = .GetDouble("total_ibpt")
        mdblpr_ibpt = .GetDouble("pr_ibpt")
        mstrVersao_IBPT = .GetString("versao_ibpt")
        'Projeto: #8153 - História: #8626 - Desenvolvimento#8627 - Moacir Pfau(07/06/2013)
        mlngCd_servico = .GetLong("Cd_servico")
        
        'Projeto: #11743 - História: #(Item não planejado) - Desenvolvimento: #0 - Ivo Sousa(19/09/2013)
        mintAliquotaICMSSTCTRC = .GetInteger("aliq_icms_st_ctrc")
        mdblMVAICMSSTCTRC = Round(.GetDouble("mva_icms_st_ctrc"), 6)
        mcurBaseICMSSTCTRC = .GetCurrency("base_icms_st_ctrc")
        mcurValorICMSSTCTRC = .GetCurrency("valor_icms_st_ctrc")
        
        'Projeto: 100340 - Desenv.: 173645 - Ueder Budni (29/05/2017)
        mdblPercRedAliq = .GetDouble("perc_red_aliq")
        mdblPercRedBase = .GetDouble("perc_red_base")
        mdblValorBaseICMSReduzida = .GetDouble("vl_base_icms_reduzida")
        mdblValorICMSDiferido = .GetDouble("vl_icms_diferido")
                
        Set mobjEntrega = New cEndereco
        Entrega.Endereco = .GetString("endereco_entrega")
        Entrega.Cidade = .GetString("cidade_entrega")
        Entrega.uf = daoEstado.Carregar(.GetString("uf_entrega"))
        Entrega.Numero = .GetLong("numero_entrega")
        Entrega.Bairro = .GetString("bairro_entrega")
        'PT: 127034 - Ueder Budni (11/06/2014)
        Entrega.CodigoMunicipioIBGE = consultarCodigoIBGE(Entrega.Cidade, Entrega.uf.Sigla)
        
        Set mobjColeta = New cEndereco
        coleta.Endereco = .GetString("endereco_coleta")
        coleta.Cidade = .GetString("cidade_coleta")
        coleta.uf = daoEstado.Carregar(.GetString("uf_coleta"))
        coleta.Numero = .GetLong("numero_coleta")
        coleta.Bairro = .GetString("bairro_coleta")
        'pt. 95345 - Ivo Sousa (15/08/2010)
        InformacoesCarga.ProdutoPredominante = .GetString("produto_predominante")
        InformacoesCarga.OutrasCaracteristicas = .GetString("outras_caracteristicas")
        InformacoesCarga.RNTRC = .GetString("rntrc")
        InformacoesCarga.DataPrevista = .GetDate("data_prevista")
        InformacoesCarga.Lotado = .GetBoolean("lotado")
        'Projeto: 200959 - Desenv.: - Ueder Budni (29/11/2017)
        InformacoesCarga.ValorDaCargaParaEfeitoAverbacao = .GetDouble("vl_carga_efeito_averb")
        
        bImpostoManual = .GetBoolean("imposto_manual")
        
        Set daoEstado = Nothing
        Set CriarObjeto = Me
    End With
End Function

'Private Function carregarColInfItens() As clsCTeColecaoItensInfQuantidade
'
'
'End Function
'Data.....: 20/12/2006
'Autor....: Alisson Ricardo
'Descrição.: Metodo que retorna um objeto do tipo cNotaSaidaIntegra para
'               ser gravado no banco de integração.
Public Function Exportar() As cNotaSaidaIntegra
    Dim objNota                 As cFreteMercadoriaReceber
    Dim objNatureza             As CNaturezasdeOperacao
    Dim objControleSeqCTe       As clsControleSeqCTe
    Dim objControleSeqCTeADO    As New clsControleSeqCTeADO
    Dim strChaveAcesso          As String
    Dim objCentroCusto          As clsCentroCusto
    Dim objParc                 As cNotaSaidaParcIntegra
    Dim intCont                 As Integer
    
On Error GoTo err_Handler
    
    Aplicacao.Connect
    Set objControleSeqCTeADO.App = Aplicacao
    Set objControleSeqCTe = objControleSeqCTeADO.carregaRegistro(mstrTipoRegistro)
    'O valor de isentas não será gravado no objeto, o sistema deve
    'calcular o mesmo para que não fique a divergencia no caso de
    'informação errada do usuário. ref. 82588
    Set Exportar = New cNotaSaidaIntegra
    With Exportar
        'Projeto: 1222 - História: #9972 - Ivo Sousa (23/04/2012)
        .TipoRegistro = mstrTipoRegistro
        .NumeroNota = mlngNumeroConhecimento
        .Fornecedor = Left(DonaSistema, 15)
        .Especie = "CTRC"
        'pt. 102689 - Ivo Sousa (25/03/2011)
        'Conforme solicitação do consultor emir com aval do Fisco Web(Angela), o sistema deve enviar para o
        'Cordilheira a empresa Destinatária da mercadoria e não a empresa que está pagando o transporte.
        '.CodigoEmpresa = mobjTitulo.Empresa
        .CodigoEmpresa = mstrCodigoDestinatario
        'Projeto: 1239 - História: 15187 - Tarefa: 15189 - Fernando Paludo 26/06/2012
        .CdRemetente = mstrCodigoRemetente
        .CdConsignatario = mstrCodigoConsignatario
        .codigoCfop = CInt(mstrCodigoCfop)
        'Correção para considerar a variação ao atualizar os impostos.
        .VariacaoCFOP = VariacaoCFOP(.codigoCfop, mstrCodigoCfopVar)
        .codigoTransp = 0
        .TipoDocumento = tp_conhecimento
        .DATALANCAMENTO = mdatEmissao
        .codigoCnpjDestinatario = cnpjCpfEmpresa(mstrCodigoDestinatario)
        .valorContabil = CCur(mdblValorConhecimento)
        .ValorBaseIcms1 = CCur(mdblValorBaseICMS)
        .valorAliquotaIcms1 = CCur(mdblPorcentagemICMS)
        .ValorIcms1 = CCur(mdblValorICMS)
        .Especie = "CTRC"
        .origemDoc = "CTRC"
        'Projeto: 1222 - História: #9972 - Ivo Sousa (23/04/2012)
        'pt. 115161 - Incluido correção do pt. para buscar a serie corretamente do
        'cadastro de controle sequencial do CT-e
        If Not objControleSeqCTe Is Nothing Then
            .Serie = objControleSeqCTe.Serie
        Else
            .Serie = serieCfop(.codigoCfop, mstrCodigoCfopVar)
        End If
        
        .Modelo = modeloCfop(.codigoCfop, mstrCodigoCfopVar)
        If mobjTitulo.CondicaoPagamento.VendaaVista Then
            .vendaVista = "S"
        Else
            .vendaVista = "N"
        End If
        
        'Projeto: #9908 - História: #11167 - Desenvolvimento: #11168 - Ivo Sousa(08/08/2013)
        .CentroCusto = 0
        If Not mobjTitulo Is Nothing Then
            If mobjTitulo.CentroCusto > 0 Then
                If mobjCache Is Nothing Then
                    Set mobjCache = New clsCache
                End If
                Set objCentroCusto = mobjCache.GetCacheCentroCusto(mobjTitulo.CentroCusto)
                .CentroCusto = objCentroCusto.CodigoCRD
            End If
        End If
        'Projeto: 1239 - História: 15187 - Tarefa: Não Planejada - Fernando Paludo 28/06/2012
        If mstrTipoFrete = "C" Then
            .frete = 1
        ElseIf mstrTipoFrete = "F" Then
            .frete = 2
        ElseIf mstrTipoFrete = "E" Then
            .frete = 3
        Else
            .frete = 4
        End If
                
        If Not mobjTitulo.parcelas Is Nothing Then
            If mobjTitulo.parcelas.Count > 0 Then
                .ParcelasNota = New cColecaoNotaSaidaParcIntegra
                mobjTitulo.parcelas.MoveFirst
                For intCont = 0 To mobjTitulo.parcelas.Count - 1
                    Set objParc = New cNotaSaidaParcIntegra
                    With objParc
                        .TipoRegistro = mobjTitulo.Tipo
                        .NumeroNota = mobjTitulo.Nota
                        .valorParcela = mobjTitulo.parcelas.CurrentObject.Valor
                        .DataVencimento = mobjTitulo.parcelas.CurrentObject.vencimento
                        .TipoTitulo = "00"
                        .TipoParcela = "N"
                        .Empresa = mobjTitulo.Empresa
                        .numeroParcela = mobjTitulo.parcelas.CurrentObject.Parcela
                    End With
                    Call .ParcelasNota.add(objParc)
                    Set objParc = Nothing
                    mobjTitulo.parcelas.MoveNext
                Next
            End If
        End If
        'pt. 82317 - Dulcino Júnior
        .complementar = New cNotaSaidaCompIntegra
        With .complementar
            .TipoRegistro = Exportar.TipoRegistro
            .NumeroNota = mlngNumeroConhecimento
            .Fornecedor = Exportar.Fornecedor
            .codigoCfop = Exportar.codigoCfop
            .codigoTransp = Exportar.codigoTransp
            .TipoDocumento = Exportar.TipoDocumento
            .codigoCnpjRemetente = cnpjEmpresa(Me.codigoRemetente)
            .codigoCnpjTransporte = CnpjTransportadora
            'Ivo Sousa (11/05/2012) - Correção para emissão de chave de acesso do CT-e enviada a SEFAZ
            strChaveAcesso = GetFieldValue("chave_acesso", "FVFTransmissaoCTe", "seq_conhecimento=" & mlngSeqConhecimento & " AND enterprise_id=" & EnterpriseID & " AND cd_estabelecimento=" & CdEstabelecimento & " AND nr_conhecimento=" & mlngNumeroConhecimento & " AND tp_registro='" & mstrTipoRegistro & "'", , Empty)
            If strChaveAcesso <> Empty Then
                .ChaveAcesso = strChaveAcesso
            End If
            'Projeto: 1239 - História: 15187 - Tarefa: Não Planejada - Fernando Paludo 27/06/2012
            If Not Trim(Exportar.CdConsignatario) = Empty Then _
                .CnpjCpfConsignatario = cnpjCpfEmpresa(Exportar.CdConsignatario)
        End With
        'Cria o objeto referente as notas do conhecimento de frete
        .conhecimento = New cColecaoNotaSaidaConhecimento
        mobjMercadorias.MoveFirst
        While Not mobjMercadorias.EOF
            Set objNota = mobjMercadorias.CurrentObject
            Call .conhecimento.add(objNota.Exportar(.TipoRegistro, .NumeroNota, .codigoCfop, .codigoTransp, .TipoDocumento))
            mobjMercadorias.MoveNext
        Wend
        Set objNota = Nothing
        Call .AtualizaImpostos(Aplicacao, difCfop)
        'pt. 86687 - Dulcino Júnior(24/04/2008)
        If EmpresaUsuaria.Industria Then
            Set objNatureza = New CNaturezasdeOperacao
            If objNatureza.CarregarRegistro(mstrCodigoCfop, mstrCodigoCfopVar) Then
                If UCase(objNatureza.DiferencaIpi) = UCase("Outras") Then
                    .valorIpiOutras = .valorContabil
                ElseIf UCase(objNatureza.DiferencaIpi) = UCase("Isentas") Then
                    .valorIpiIsentas = .valorContabil
                End If
            End If
        End If
    End With
    Aplicacao.Disconnect
    Exit Function
err_Handler:
    Aplicacao.Disconnect
End Function

'Data.......: 20/12/2006
'Autor......: Alisson Ricardo
'Descrição..: Função utilizada para retornar o cnpj ou cpf da empresa.
'Parametros.: [strCodigo] Valor do tipo String referente ao apel da empresa.
'Retorno....: cnpj da empresa informada.
Private Function cnpjCpfEmpresa(strCodigo As String) As String
    Dim selCmd As IDBSelectCommand
    Dim rdResult As IDBReader
    
On Error GoTo erro_consultando
    Aplicacao.Connect
    Set selCmd = Aplicacao.CreateSelectCommand
    With selCmd
        .Table.TableName = "Empresas"
        Call .Filter.Append("Apel = @pApel")
        Call .Parameters.add(.CreateParameter("@pApel", strCodigo, dbFieldTypeString, 15))
    End With
    Set rdResult = Aplicacao.ExecuteReader(Aplicacao.GetInternalAuthorization, selCmd)
    If Not rdResult.EOF Then
        cnpjCpfEmpresa = rdResult.GetString("CNPJ/CPF")
    Else
        cnpjCpfEmpresa = " "
    End If
    rdResult.CloseReader
    Set rdResult = Nothing
    Aplicacao.Disconnect
    Set selCmd = Nothing
    
    Exit Function
erro_consultando:
    Call Throw(Err)
    cnpjCpfEmpresa = " "
    FinallyConnection Aplicacao
End Function

'Data.......: 17/04/2007
'Autor......: Dulcino Júnior
'Descrição..: Muda a situação do conhecimento de frete para cancelado ou normal de acordo com o
'               parametros passado.
'Parametros.: [Boolean] Flag que indica se o conhecimento de frete deve ser cancelado ou não.
Public Sub Cancelar(blnCancelar As Boolean)
    If blnCancelar Then
        situacao = "X"
        mobjTitulo.situacao = "Cancelada"
    Else
        situacao = "A"
        mobjTitulo.situacao = "Normal"
    End If
End Sub

'Data.......: 26/07/2007
'Autor......: Dulcino Júnior
'Descrição..: Função utilizada para retornar o Cnpj da empresa transportadora
'Retorno....: [String] Cnpj da empresa transportadora.
Public Function CnpjTransportadora() As String
    Dim selCmd   As IDBSelectCommand
    Dim rdResult As IDBReader
    
On Error GoTo Error_Handler
    Aplicacao.Connect
    Set selCmd = Aplicacao.CreateSelectCommand
    With selCmd
        .SelectClause = "Empresa"
        
        .Table.TableName = "[Tipos Globais]"
        
        Call .Filter.Append("Tipo = @pTipo")
        Call .Parameters.add(.CreateParameter("@pTipo", Me.TipoRegistro, dbFieldTypeString, 15))
    End With
    Set rdResult = Aplicacao.ExecuteReader(Aplicacao.GetInternalAuthorization, selCmd)
    If Not rdResult.EOF Then
        CnpjTransportadora = cnpjEmpresa(rdResult.GetString("Empresa"))
    Else
        CnpjTransportadora = ""
    End If
    rdResult.CloseReader
    Set rdResult = Nothing
    Set selCmd = Nothing
    Aplicacao.Disconnect
    
    Exit Function
Error_Handler:
    Err.Clear
    CnpjTransportadora = ""
End Function
