VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "cTitulo"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_Ext_KEY = "SavedWithClassBuilder" ,"Yes"
Attribute VB_Ext_KEY = "Top_Level" ,"Yes"
Option Explicit

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''
''  Implementation of the  Class cTitulo
''  Generated by Enterprise Architect
''  Created on:      28-ago-2006 09:48:59
''  Original author: Dulcino Júnior
''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


Private mstrTipo As String
Private mlngNota As Long
Private mstrNossoNumero As String
Private mstrEmpresa As String
Private mdatEmissao As Date
Private mstrDescricao As String
Private mstrControle As String
Private mlngBanco As Long
Private mstrCarteira As String
Private mlngConta As Long
Private mlngCentroCusto As Long
Private mobjPagamento As cCondicaoPagamento
Private mdblValor As Double
Private mobjParcelas As cColecaoParcela
Private mstrSituacao As String
Private mlngOperacaoContabil As Long
Private mlngTransportadora As Long

Private Sub Class_Initialize()
    Set mobjPagamento = New cCondicaoPagamento
End Sub

Public Property Get Banco() As Long
        Banco = mlngBanco
End Property

Public Property Let Banco(ByVal NewVal As Long)
        mlngBanco = NewVal
End Property

Public Property Let Carteira(ByVal NewVal As String)
        mstrCarteira = NewVal
End Property

Public Property Get Carteira() As String
        Carteira = mstrCarteira
End Property

Public Property Let CondicaoPagamento(ByVal NewVal As cCondicaoPagamento)
        Set mobjPagamento = NewVal
End Property

Public Property Get CondicaoPagamento() As cCondicaoPagamento
        Set CondicaoPagamento = mobjPagamento
End Property

Public Property Let conta(ByVal NewVal As Long)
        mlngConta = NewVal
End Property

Public Property Get conta() As Long
        conta = mlngConta
End Property

Public Property Let Controle(ByVal NewVal As String)
        mstrControle = NewVal
End Property

Public Property Get Controle() As String
        Controle = mstrControle
End Property

Public Property Let Descricao(ByVal NewVal As String)
        mstrDescricao = NewVal
End Property

Public Property Get Descricao() As String
        Descricao = mstrDescricao
End Property

Public Property Get Emissao() As Date
        Emissao = mdatEmissao
End Property

Public Property Let Emissao(ByVal NewVal As Date)
        mdatEmissao = NewVal
End Property

Public Property Let Empresa(ByVal NewVal As String)
        mstrEmpresa = NewVal
End Property

Public Property Get Empresa() As String
        Empresa = mstrEmpresa
End Property

Public Property Let NossoNumero(ByVal NewVal As String)
        mstrNossoNumero = NewVal
End Property

Public Property Get NossoNumero() As String
        NossoNumero = mstrNossoNumero
End Property

Public Property Get parcelas() As cColecaoParcela
        Set parcelas = mobjParcelas
End Property

Public Property Let parcelas(ByVal NewVal As cColecaoParcela)
        Set mobjParcelas = NewVal
End Property

Public Property Get Tipo() As String
        Tipo = mstrTipo
End Property

Public Property Let Tipo(ByVal NewVal As String)
        mstrTipo = NewVal
End Property

Public Property Let Nota(ByVal NewVal As Long)
        mlngNota = NewVal
End Property

Public Property Get Nota() As Long
        Nota = mlngNota
End Property

Public Property Get Valor() As Double
        Valor = mdblValor
End Property

Public Property Let Valor(ByVal NewVal As Double)
        mdblValor = NewVal
End Property

Public Property Get situacao() As String
    situacao = mstrSituacao
End Property

Public Property Let situacao(ByVal NewVal As String)
    mstrSituacao = NewVal
End Property

Public Property Get CentroCusto() As Long
    CentroCusto = mlngCentroCusto
End Property

Public Property Let CentroCusto(ByVal NewVal As Long)
    mlngCentroCusto = NewVal
End Property

Public Property Get OperacaoContabil() As Long
    OperacaoContabil = mlngOperacaoContabil
End Property

Public Property Let OperacaoContabil(ByVal NewVal As Long)
    mlngOperacaoContabil = NewVal
End Property

Public Property Get Transportadora() As Long
    Transportadora = mlngTransportadora
End Property

Public Property Let Transportadora(ByVal NewVal As Long)
    mlngTransportadora = NewVal
End Property

Public Sub parcelar()
    Set mobjParcelas = mobjPagamento.geraParcelas(mdblValor, mdatEmissao)
End Sub

Public Function CriarObjeto(rd As IDBReader) As cTitulo
    Dim objDuplicata As New CDuplicata
    Dim parcelaDAO As New cParcelaDAO
    If objDuplicata.Carregar(rd.GetString("pagrec"), rd.GetLong("nota"), rd.GetString("Empresa"), rd.GetString("Tipo"), 1) Then
        Call mobjPagamento.Carregar(rd.GetInteger("cd_condicaopagamento"))
        With objDuplicata
            mlngNota = .Nota
            mstrTipo = .Tipo
            mstrEmpresa = .Empresa
            mstrNossoNumero = .NossoNumero
            mdatEmissao = .Emissao
            mstrDescricao = .Descricao
            mstrControle = .Controle
            mlngBanco = .Banco
            mstrCarteira = .Carteira
            mlngConta = .conta
            mlngCentroCusto = .Centro
            mstrSituacao = .situacao
            mlngOperacaoContabil = .OperacaoContabil
            mlngTransportadora = .Transportadora
        End With
        Set mobjParcelas = parcelaDAO.carregar_lista(objDuplicata)
        mdblValor = mobjParcelas.ValorTotal
        Set parcelaDAO = Nothing
        Set CriarObjeto = Me
    Else
        Set CriarObjeto = New cTitulo
    End If
End Function
