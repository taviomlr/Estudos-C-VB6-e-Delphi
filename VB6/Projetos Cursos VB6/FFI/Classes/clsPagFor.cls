VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "clsPagFor"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit

'''''''''''''''''''''''''''''''''''''''''''''''''''
''                                               ''
''  Implementation of the  Class clsPagFor       ''
''  Generated by Enterprise Architect            ''
''  Created on:      14-out-2008                 ''
''  Original author: Ivo Sousa                   ''
''                                               ''
'''''''''''''''''''''''''''''''''''''''''''''''''''

Private mobjArquivo         As cArquivoTexto
Private mobjBanco           As clsBanco
Private mlngBancoDestino    As Long
Private mlngCamaraOrigem    As Long
Private mintQtdLotes        As Integer
Private mlngNumeroArquivo   As Long
Private mlngQtdRegistrosArq As Long
Private mstrArquivo         As String
Private mstrNossoNumero     As String
Private mcolDocumentos      As Collection
Private mcolErros           As Collection
Private mcurTotalValores    As Currency
Private sSegmentoOrigem As String 'Demanda 222036 - Autor Yuji - Mapeamento do segmento J para o Itaú

Public Property Let objArquivo(ByVal NewVal As cArquivoTexto)
    Set mobjArquivo = NewVal
End Property

Public Property Let BancoDestino(ByVal NewVal As Long)
    mlngBancoDestino = NewVal
End Property

Public Property Let CamaraOrigem(ByVal NewVal As Long)
    mlngCamaraOrigem = NewVal
End Property

Public Property Let QtdLotes(ByVal NewVal As Integer)
    mintQtdLotes = NewVal
End Property

Public Property Let NumeroArquivo(ByVal NewVal As Long)
    mlngNumeroArquivo = NewVal
End Property

Public Property Let Arquivo(ByVal NewVal As String)
    mstrArquivo = NewVal
End Property
'Demanda 222036 - Autor Yuji - Mapeamento do segmento J para o Itaú
Public Property Let SegmentoOrigem(ByVal NewVal As String)
    sSegmentoOrigem = NewVal
End Property

Public Property Get ColDocumentos()
    Set ColDocumentos = mcolDocumentos
End Property

Public Property Get colErros()
    Set colErros = mcolErros
End Property

Public Function geraArquivo(ByRef strErro As String) As Boolean
    'Bradesco (Layout Especifico)
    Dim objPAGFORBradescoBiz As bizPAGFORBradescoArquivo
    
    'Ivo Sousa (17/04/2017) - Tratamento para o layout especifico para o banco Bradesco
    If mlngCamaraOrigem = 237 Then
        Set objPAGFORBradescoBiz = New bizPAGFORBradescoArquivo
        geraArquivo = objPAGFORBradescoBiz.GeraArquivopaPAGFOR(CarregaHeaderBradesco(strErro), CarregaDetailBradesco(strErro), CarregaTraillerBradesco(strErro), mobjArquivo, strErro)
    Else
        If geraHeaderArquivo(strErro) Then
            If GeraLoteArquivo(strErro) Then
                If geraTrailerArquivo(strErro) Then
                    geraArquivo = True
                Else
                    geraArquivo = False
                    strErro = "Erro ao gerar o Trailer do Arquivo: " & strErro
                End If
            Else
                geraArquivo = False
                strErro = "Erro ao gerar o Lote do Arquivo: " & strErro
            End If
        Else
            geraArquivo = False
            strErro = "Erro ao gerar o Header do Arquivo: " & strErro
        End If
    End If
End Function

Private Function geraHeaderArquivo(ByRef strErro As String) As Boolean
    Dim strLinha  As String
    Dim rstResult As Object
    Dim objBanco  As New clsBanco
    
On Error GoTo ErroHeader
    Call AbreRecordset(rstResult, "SELECT * FROM Bancos WHERE Banco = " & mlngBancoDestino)
    Set objBanco = objBanco.CriarObjeto(rstResult)
    If Not mobjArquivo Is Nothing Then
        'Código do Banco
        strLinha = formatCampoInt(CStr(mlngCamaraOrigem), 3)
        'Lote Serviço
        strLinha = strLinha & "0000"
        'Registro Header do Arquivo
        strLinha = strLinha & "0"
        '9 brancos para uso da FEBRABAM
        strLinha = strLinha & Space(9)
        'Tipo Inscrição da Empresa
        strLinha = strLinha & "2"
        'Numero da Inscrição da Empresa
        strLinha = strLinha & formatCampoInt(limpaDOC(CnpjEmpresaUsuaria), 14)
        'Codigo do Convenio com o Banco
        strLinha = strLinha & UCase(formatCampoStr(objBanco.Convenio, 20))
        'Agencia
        strLinha = strLinha & formatCampoInt(objBanco.Agencia, 5)
        'DV Agencia
        strLinha = strLinha & UCase(formatCampoStr(objBanco.DVAgencia, 1))
        'Conta
        strLinha = strLinha & formatCampoInt(objBanco.conta, 12)
        'DV Conta
        strLinha = strLinha & UCase(formatCampoStr(objBanco.DVConta, 1))
        If Len(Trim(objBanco.DVConta)) = 2 Then
            strLinha = strLinha & UCase(Right(objBanco.DVConta, 1))
        Else
            strLinha = strLinha & " "
        End If
        'Empresa
        strLinha = strLinha & UCase(formatCampoStr(NomeDonaSistema, 30))
        'Nome do Banco
        strLinha = strLinha & UCase(formatCampoStr(objBanco.NomeBanco, 30))
        'FEBRABAN
        strLinha = strLinha & Space(10)
        'Remessa / Retorno
        strLinha = strLinha & "1"
        'Data da Geração
        strLinha = strLinha & Format(Date, "ddmmyyyy")
        'Hora da Geração
        strLinha = strLinha & Format(Time, "hhmmss")
        'Nº Sequêncial do Arquivo
        strLinha = strLinha & formatCampoInt((objBanco.NRSequencialPagFor + 1), 6)
        'Versão do Layout
        strLinha = strLinha & "030"
        'Densidade de Gravação do Arquivo
        strLinha = strLinha & "00000"
        'Reservado Banco
        strLinha = strLinha & Space(20)
        'Reservado Empresa - Passando o número sequêncial do controle de geração.
        strLinha = strLinha & formatCampoStr(objBanco.NRSequencialPagFor + 1, 20)
        'Reservado FEBRABAN
        strLinha = strLinha & Space(11)
        'Identificação da cobrança
        strLinha = strLinha & "CSP"
        'Uso Exclusivo das VANS
        strLinha = strLinha & formatCampoInt("0", 3)
        'Tipo de Serviço e Código das ocorrências(Registros sem Papel)
        strLinha = strLinha & Space(12)
        mobjArquivo.add (strLinha)
        mlngQtdRegistrosArq = mlngQtdRegistrosArq + 1
    End If
    geraHeaderArquivo = True
    Exit Function
ErroHeader:
    geraHeaderArquivo = False
    strErro = err.Description
End Function

Private Function CarregaHeaderBradesco(ByRef strErro As String) As voPAGFORBradescoHeader
    Dim strLinha                    As String
    Dim rstResult                   As Object
    Dim objBanco                    As New clsBanco
    Dim objPAGFORBradescoHeaderVO   As New voPAGFORBradescoHeader
    
On Error GoTo ErroHeader
    Call AbreRecordset(rstResult, "SELECT * FROM Bancos WHERE Banco = " & mlngBancoDestino)
    Set objBanco = objBanco.CriarObjeto(rstResult)
    
    mlngQtdRegistrosArq = 1
    
    With objPAGFORBradescoHeaderVO
        .IdentificacaoRegistro = 0
        If objBanco.CodCedente <> Empty Then
            .CodigoComunicacao = objBanco.CodCedente
        End If
                
        ' 12/11/2018 - D. 234270 - H. 201848 - Yuji F. - Correção no tratamento da informação do CPF/CNPJ
        If limpaDOC(objBanco.CPFCNPJCedente) <> Empty Then
            .RazaoSocial = objBanco.Cedente
            If Len(limpaDOC(objBanco.CPFCNPJCedente)) > 11 Then
                .TipoInscricao = 2
                .NumeroInscricaoCNPJ = "0" & Left(limpaDOC(objBanco.CPFCNPJCedente), 8)
                .FilialCNPJ = Mid(limpaDOC(objBanco.CPFCNPJCedente), 9, 4)
                If IsNumeric(limpaDOC(objBanco.CPFCNPJCedente)) Then .ControleCNPJ = Right(limpaDOC(objBanco.CPFCNPJCedente), 2)
            Else
                .TipoInscricao = 1
                .NumeroInscricaoCNPJ = Left(limpaDOC(objBanco.CPFCNPJCedente), 9)
                .FilialCNPJ = "0000"
                If IsNumeric(limpaDOC(objBanco.CPFCNPJCedente)) Then .ControleCNPJ = Right(limpaDOC(objBanco.CPFCNPJCedente), 2)
            End If
        Else
            .RazaoSocial = EmpresaUsuaria.Razao
            If EmpresaUsuaria.GetCadastroEmpresa.Pessoa = "Jurídica" Then
                .TipoInscricao = 2
                .NumeroInscricaoCNPJ = "0" & Left(limpaDOC(EmpresaUsuaria.CNPJ), 8)
                .FilialCNPJ = Mid(limpaDOC(EmpresaUsuaria.CNPJ), 9, 4)
                If IsNumeric(limpaDOC(EmpresaUsuaria.CNPJ)) Then .ControleCNPJ = Right(limpaDOC(EmpresaUsuaria.CNPJ), 2)
            Else
                .TipoInscricao = 1
                .NumeroInscricaoCNPJ = Left(limpaDOC(EmpresaUsuaria.CNPJ), 9)
                .FilialCNPJ = "0000"
                If IsNumeric(limpaDOC(EmpresaUsuaria.CNPJ)) Then .ControleCNPJ = Right(limpaDOC(EmpresaUsuaria.CNPJ), 2)
            End If
        End If
        .TipoServico = 20
        .OrigemArquivo = 1
        .NumeroRemessa = objBanco.NRSequencialPagFor + 1
        .NumeroRetorno = 0
        .DataGravacao = Format(DateTime.Now, "yyyyMMdd")
        .HoraGravacao = Format(DateTime.Now, "HHmmSS")
        .TipoProcessamento = 0
        .NumeroLista = .NumeroRemessa
        .Sequencial = mlngQtdRegistrosArq
    End With
    mlngQtdRegistrosArq = mlngQtdRegistrosArq + 1

    Set CarregaHeaderBradesco = objPAGFORBradescoHeaderVO
    Exit Function
ErroHeader:
    Set CarregaHeaderBradesco = Nothing
    strErro = err.Description
End Function

Private Function CarregaDetailBradesco(ByRef strErro As String) As voPAGFORBradescoDetailCol
    Dim intCont                     As Integer
    Dim strLinha                    As String
    Dim rstResult                   As Object
    Dim rstResultBanco              As Object
    Dim objPAGFORBradescoDetailVO   As voPAGFORBradescoDetail
    Dim objPAGFORBradescoDetailCol  As New voPAGFORBradescoDetailCol
    Dim objEmpresa                  As CEmpresas
    Dim objBanco                    As New clsBanco
    
On Error GoTo ErroDetalheLote

    intCont = 1
    If AbreRecordset(rstResult, "SELECT * FROM FFIItemPagamento WHERE cd_arquivoPagamento = " & mlngNumeroArquivo & " AND cd_lotePagamento = " & intCont & " ORDER BY nr_documento, nr_parcela") = WL_OK Then
        mcurTotalValores = 0
        Call AbreRecordset(rstResultBanco, "SELECT * FROM Bancos WHERE Banco = " & mlngBancoDestino)
        Set objBanco = objBanco.CriarObjeto(rstResultBanco)
        While Not rstResult.EOF
            Set objPAGFORBradescoDetailVO = New voPAGFORBradescoDetail
            If mobjCache Is Nothing Then
                Set mobjCache = New clsCache
            End If
            Set objEmpresa = mobjCache.GetCacheEmpresa(rstResult.Fields("cd_empresa").value)
            
            With objPAGFORBradescoDetailVO
                
                .IdentificacaoDetalhe = 1
                If objEmpresa.Pessoa = "Jurídica" Then
                    .TipoInscricao = 2
                    .NumeroInscricaoCNPJ = "0" & Left(limpaDOC(objEmpresa.CNPJ_CPF), 8)
                    .FilialCNPJ = Mid(limpaDOC(objEmpresa.CNPJ_CPF), 9, 4)
                    .ControleCNPJ = Right(limpaDOC(objEmpresa.CNPJ_CPF), 2)
                Else
                    .TipoInscricao = 1
                    .NumeroInscricaoCNPJ = Left(limpaDOC(objEmpresa.CNPJ_CPF), 9)
                    .FilialCNPJ = "0000"
                    .ControleCNPJ = Right(limpaDOC(objEmpresa.CNPJ_CPF), 2)
                End If
                .RazaoSocial = objEmpresa.Razao
                .EnderecoFornec = objEmpresa.Endereco
                If objEmpresa.NroEndereco <> Empty Then
                    .EnderecoFornec = .EnderecoFornec & ", " & objEmpresa.NroEndereco
                End If
                If objEmpresa.Cep <> Empty Then
                    .CEPFornec = Left(limpaDOC(objEmpresa.Cep), 5)
                    .CEPCompFornec = Right(limpaDOC(objEmpresa.Cep), 3)
                End If
                
                'Composição do Campo: Codigo do Lote + Item do Lote + Nr do Documento + Parcela
                .NumeroPagt = rstResult.Fields("cd_lotePagamento").value & "/" & rstResult.Fields("cd_itemPagamento").value & "/" & rstResult.Fields("cd_arquivoPagamento").value
                .Carteira = 0
                .NossoNumero = "000000000000"
                .DataVencimento = Format(CDate(rstResult.Fields("dt_vencimento").value), "yyyyMMdd")
                .dataEmissao = "00000000"
                .DataLimiteDesconto = "00000000"
                .ValorDocumento = rstResult.Fields("vlr_titulo").value - rstResult.Fields("vlr_abatimento").value + rstResult.Fields("vlr_acrescimo").value
                .ValorPagamento = rstResult.Fields("vlr_titulo").value
                .ValorDesconto = rstResult.Fields("vlr_abatimento").value
                .valorAcrescimo = rstResult.Fields("vlr_acrescimo").value
                .TipoDocumento = 1
                .NumeroNF = rstResult.Fields("nr_documento").value
                .SerieNF = Empty
                .ModalidadePagt = rstResult.Fields("cd_forma_lancamento").value
                .DataEfetivacaoPagt = .DataVencimento
                .SituacaoAgendamento = "01"
                .TipoMovimento = rstResult.Fields("cd_tipo_movimento").value
                .CodigoMovimento = rstResult.Fields("cd_movimento").value
                If Not IsNull(rstResult.Fields("cd_tipo_doc").value) Then
                    .TipoDocCompensado = rstResult.Fields("cd_tipo_doc").value
                End If
                If Not IsNull(rstResult.Fields("cd_finalidade_doc").value) Then
                    .CodigoFinalidade = rstResult.Fields("cd_finalidade_doc").value
                End If
                If Not IsNull(rstResult.Fields("cd_cod_lancamento").value) Then
                    .CodigoLancamento = StrToInt(rstResult.Fields("cd_cod_lancamento").value)
                Else
                    .CodigoLancamento = "0" '.NumeroNF
                End If
                If Not IsNull(rstResult.Fields("cd_tipo_conta").value) Then
                    .TipoConta = rstResult.Fields("cd_tipo_conta").value
                Else
                    .TipoConta = 0
                End If
                .TipoContaForn = 1
                .SequencialRegistro = mlngQtdRegistrosArq
                .ContaComplementar = objBanco.conta '& objBanco.DVConta
                If (rstResult.Fields("tp_documento").value = "Lan") Then
                    .CodigoBarras = GetFieldValue("LINDIG", "Lançamentos", "Código = " & rstResult.Fields("nr_documento").value & " AND PagRec = 'P' AND Parcela = " & rstResult.Fields("nr_parcela").value, , Empty)
                Else
                    'Demanda 222036 - Autor Yuji - Correção no filtro da consulta. Tipo_registro não existe na tabela de Duplicatas
                    .CodigoBarras = GetFieldValue("LINDIG", "Duplicatas", "Nota = " & rstResult.Fields("nr_documento").value & " AND PagRec = 'P' AND Parcela = " & rstResult.Fields("nr_parcela").value & " AND tipo = '" & rstResult.Fields("tipo_registro").value & "' AND Empresa = '" & rstResult.Fields("cd_empresa").value & "'", , Empty)
                End If
                
                'Ivo (28/07/2017) - Inicio processo de consulta de valores do codigo de barras
                .CodBancoFornec = StrToInt(Left(.CodigoBarras, 3))
                .FatorVencimento = StrToInt(Mid(Right(.CodigoBarras, 25), 12, 4))
                If .ModalidadePagt = 31 And .CodigoBarras <> Empty Then
                    If Left(.CodigoBarras, 3) = 237 Then
                        .CodAgenciaFornec = Mid(.CodigoBarras, 20, 4)
                        .DigitoAgenciaFornec = DigitoVerificador(formatCampoInt(.CodAgenciaFornec, 4), 11, False, False, 2, 3, 4, 5)
                        .ContaCorrenteFornec = Mid(.CodigoBarras, 37, 7)
                        If Not .ContaCorrenteFornec = Empty Then
                            .DigContaCorrenteFornec = DigitoVerificador(formatCampoInt(.ContaCorrenteFornec, 7), 11, False, False, 2, 3, 4, 5, 6, 7, 2)
                        Else
                            .DigContaCorrenteFornec = Empty
                        End If
                    Else
                        .CodAgenciaFornec = 0
                        .DigitoAgenciaFornec = Empty
                        .ContaCorrenteFornec = Empty
                        .DigContaCorrenteFornec = Empty
                    End If
                Else
                    If Not IsNull(rstResult.Fields("nr_camara").value) Then
                        .CodBancoFornec = rstResult.Fields("nr_camara").value
                    End If
                    If Not IsNull(rstResult.Fields("nr_agencia").value) Then
                        .CodAgenciaFornec = rstResult.Fields("nr_agencia").value
                    End If
                    If Not IsNull(rstResult.Fields("nr_digitoAgencia").value) Then
                        .DigitoAgenciaFornec = rstResult.Fields("nr_digitoAgencia").value
                    End If
                    If Not IsNull(rstResult.Fields("nr_contaCorrente").value) Then
                        .ContaCorrenteFornec = rstResult.Fields("nr_contaCorrente").value
                    End If
                    If Not IsNull(rstResult.Fields("nr_digitoConta").value) Then
                        .DigContaCorrenteFornec = rstResult.Fields("nr_digitoConta").value
                    End If
                End If
                'Ivo (28/07/2017) - Final do procecesso de consulta de valores do codigo de barras
                mcurTotalValores = mcurTotalValores + Round(.ValorPagamento, 2)
                
                mlngQtdRegistrosArq = mlngQtdRegistrosArq + 1
                
            End With
            Call objPAGFORBradescoDetailCol.add(objPAGFORBradescoDetailVO)
            Set objPAGFORBradescoDetailVO = Nothing
            intCont = intCont + 1
            rstResult.MoveNext
            
        Wend
    End If
    
    Set CarregaDetailBradesco = objPAGFORBradescoDetailCol
    Exit Function
    
ErroDetalheLote:
    Set CarregaDetailBradesco = Nothing
    Call MsgBox("Ocorreu um erro ao gerar os Detalhes do Arquivo: " & err.Description)
    strErro = err.Description
End Function

Private Function CarregaTraillerBradesco(ByRef strErro As String) As voPAGFORBradescoTrailler
    Dim objPAGFORBradescoTrailler   As New voPAGFORBradescoTrailler
    
On Error GoTo ErroTrailerLote

    With objPAGFORBradescoTrailler
        .IdentificacaoRegistro = 9
        .QuantidadeRegistros = mlngQtdRegistrosArq
        .TotalValores = mcurTotalValores
        .SequencialArquivo = .QuantidadeRegistros
    End With
    Set CarregaTraillerBradesco = objPAGFORBradescoTrailler
    Exit Function
    
ErroTrailerLote:
    Set CarregaTraillerBradesco = Nothing
    strErro = err.Description
End Function

Private Function GeraLoteArquivo(ByRef strErro As String) As Boolean
    Dim intCont   As Integer
    Dim rstResult As Object
    Dim intQtdRegistro As Integer
    Dim curTotalValores As Currency
    Dim curTotalMoedas As Currency
    
On Error GoTo ErroLote
    For intCont = 1 To mintQtdLotes
        If AbreRecordset(rstResult, "SELECT * FROM FFIItemPagamento WHERE cd_arquivoPagamento = " & mlngNumeroArquivo & " AND cd_lotePagamento = " & intCont & " ORDER BY nr_documento,nr_parcela") = WL_OK Then
            If GeraHeaderLote(strErro, strToLng(rstResult.Fields("cd_banco").value), intCont, rstResult.Fields("cd_tipo_servico").value, rstResult.Fields("cd_forma_lancamento").value) Then
                If GeraDetalheLote(strErro, rstResult, intQtdRegistro, intCont, curTotalValores, curTotalMoedas) Then
                    If Not GeraTrailerLote(strErro, intQtdRegistro, curTotalValores, curTotalMoedas, intCont) Then
                        Exit Function
                    End If
                Else
                    Exit Function
                End If
            Else
                Exit Function
            End If
        End If
    Next intCont
    GeraLoteArquivo = True
    Exit Function
ErroLote:
    GeraLoteArquivo = False
    strErro = err.Description
End Function

Private Function GeraHeaderLote(ByRef strErro As String, lngBanco As Long, intLote As Integer, strTipoServico As String, strFormaLancamento As String) As Boolean
    Dim strLinha  As String
    Dim rstResult As Object
    Dim strRua    As String
    Dim StrNumero As String
    Dim strCep    As String
    
On Error GoTo ErroHeaderLote
    If AbreRecordset(rstResult, "SELECT * FROM Bancos WHERE Banco = " & lngBanco) = WL_OK Then
        Set mobjBanco = New clsBanco
        Set mobjBanco = mobjBanco.CriarObjeto(rstResult)
        'Código do Banco
        strLinha = formatCampoInt(CStr(mlngCamaraOrigem), 3)
        'Lote Serviço
        strLinha = strLinha & formatCampoInt(CStr(intLote), 4)
        'Registro Header de Lote
        strLinha = strLinha & "1"
        'Tipo de Operação
        strLinha = strLinha & "C"
        'Tipo de Serviço
        strLinha = strLinha & Format(strTipoServico, "00")
        'Forma de Lançamento
        strLinha = strLinha & Format(strFormaLancamento, "00")
        'Nº da Versão do Layout
        strLinha = strLinha & "020"
        'FEBRABAN
        strLinha = strLinha & Space(1)
        'Tipo de Inscrição da Empresa
        strLinha = strLinha & "2"
        'Numero da Inscrição da Empresa
        strLinha = strLinha & limpaDOC(CnpjEmpresaUsuaria)
        'Codigo do Convenio com o Banco
        strLinha = strLinha & UCase(formatCampoStr(mobjBanco.Convenio, 20))
        'Agencia
        strLinha = strLinha & formatCampoInt(mobjBanco.Agencia, 5)
        'DV Agencia
        strLinha = strLinha & UCase(formatCampoStr(mobjBanco.DVAgencia, 1))
        'Conta
        strLinha = strLinha & formatCampoInt(mobjBanco.conta, 12)
        'DV Conta
        strLinha = strLinha & UCase(formatCampoStr(mobjBanco.DVConta, 1))
        If Len(Trim(mobjBanco.DVConta)) = 2 Then
            strLinha = strLinha & UCase(Right(mobjBanco.DVConta, 1))
        Else
            strLinha = strLinha & " "
        End If
        'Empresa
        strLinha = strLinha & UCase(formatCampoStr(NomeDonaSistema, 30))
        'Mensagem
        strLinha = strLinha & Space(40)
        'Separa a rua do número
        Call GetEndereco(strRua, StrNumero)
        'Nome da Rua
        strLinha = strLinha & UCase(formatCampoStr(strRua, 30))
        'Número
        strLinha = strLinha & formatCampoInt(StrNumero, 5)
        'Complemento
        strLinha = strLinha & Space(15)
        'Cidade
        strLinha = strLinha & UCase(formatCampoStr(EmpresaUsuaria.Cidade, 20))
        'CEP e Complemento
        strCep = limpaDOC(EmpresaUsuaria.Cep)
        If Len(Trim(strCep)) > 0 Then
            strLinha = strLinha & formatCampoInt(Left(strCep, 5), 5)
            strLinha = strLinha & UCase(formatCampoStr(Right(limpaDOC(EmpresaUsuaria.Cep), 3), 3))
        Else
            strLinha = strLinha & formatCampoInt("0", 5)
            strLinha = strLinha & Space(3)
        End If
        'UF
        strLinha = strLinha & UCase(formatCampoStr(EmpresaUsuaria.Estado, 2))
        'FEBRABAN e Códigos Ocorrência Retorno
        strLinha = strLinha & Space(18)
        mobjArquivo.add (strLinha)
        mlngQtdRegistrosArq = mlngQtdRegistrosArq + 1
    End If
    GeraHeaderLote = True
    Exit Function
ErroHeaderLote:
    GeraHeaderLote = False
    strErro = err.Description
End Function

Private Function GeraDetalheLote(ByRef strErro As String, ByVal rstResult As Object, ByRef intQtdRegistro As Integer, intLote As Integer, ByRef curTotalValores As Currency, ByRef curTotalMoedas As Currency) As Boolean
    Dim intCont  As Integer
    'Demanda 222036 - Autor Yuji - Mapeamento do segmento J para o Itaú
    Dim strLinha, sLinhaDigitavel As String
    Dim bItauSegmentoJ As Boolean
    
On Error GoTo ErroDetalheLote

    bItauSegmentoJ = (mlngCamaraOrigem = 341 And sSegmentoOrigem = "J")
    With rstResult
        intCont = 0
        While Not .EOF
            intCont = intCont + 1
            'Codigo do Banco
            strLinha = formatCampoInt(CStr(mlngCamaraOrigem), 3)
            'Lote Serviço
            strLinha = strLinha & formatCampoInt(CStr(intLote), 4)
            'Registro Detalhe do Lote
            strLinha = strLinha & "3"
            'Sequencial do Registro
            strLinha = strLinha & formatCampoInt(CStr(intCont), 5)
            'Codigo do Segmento
            strLinha = strLinha & sSegmentoOrigem
            
            If mlngCamaraOrigem = 341 Then
                'Tipo de Movimento
                strLinha = strLinha & Format(.Fields("cd_movimento").value, "000")
            Else
                'Tipo de Movimento
                strLinha = strLinha & formatCampoInt(.Fields("cd_tipo_movimento").value, 1)
                'Código do Movimento
                strLinha = strLinha & Format(.Fields("cd_movimento").value, "00")
            End If
            
            If bItauSegmentoJ Then
                If (.Fields("tp_documento").value = "Lan") Then
                    sLinhaDigitavel = GetFieldValue("LINDIG", "Lançamentos", "Código = " & .Fields("nr_documento").value & " AND PagRec = 'P' AND Parcela = " & .Fields("nr_parcela").value, , Empty)
                Else
                    sLinhaDigitavel = GetFieldValue("LINDIG", "Duplicatas", "Nota = " & .Fields("nr_documento").value & " AND PagRec = 'P' AND Parcela = " & .Fields("nr_parcela").value & " AND tipo = '" & .Fields("tipo_registro").value & "' AND Empresa = '" & .Fields("cd_empresa").value & "'", , Empty)
                End If
                
                Dim oRegExp As New RegExp
                Dim oMatch As Match
                Dim colMatch As MatchCollection
                
                ' 1º padrão : XXXXX.XXXXX XXXXX.XXXXXX XXXXX.XXXXXX X XXXXXXXXXXXXXX
                oRegExp.Pattern = "\d{5}\.\d{5} \d{5}\.\d{6} \d{5}\.\d{6} \d \d{14}"
                oRegExp.IgnoreCase = True
                oRegExp.Global = True
                
                If oRegExp.Test(sLinhaDigitavel) Then
                    Set colMatch = oRegExp.Execute(sLinhaDigitavel)
                    sLinhaDigitavel = NumberOf(colMatch(0).value)
                                    
                    ' Código do Banco + Código da Moeda
                    strLinha = strLinha & Left(sLinhaDigitavel, 4)
                    ' DV do Código de Barras
                    strLinha = strLinha & Mid(Right(sLinhaDigitavel, 15), 1, 1)
                    ' Fator de Vencimento
                    strLinha = strLinha & Mid(Right(sLinhaDigitavel, 14), 1, 4)
                    ' Valor do Título
                    strLinha = strLinha & Right(sLinhaDigitavel, 10)
                    ' Campo Livre
                    strLinha = strLinha & Mid(sLinhaDigitavel, 5, 25)
                Else
                    ' 2º padrão : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
                    oRegExp.Pattern = "\d{44}"
                    If oRegExp.Test(sLinhaDigitavel) Then
                        Set colMatch = oRegExp.Execute(sLinhaDigitavel)
                        strLinha = strLinha & colMatch(0).value
                    Else
                        Set oRegExp = Nothing
                        GeraDetalheLote = False
                        strErro = "Não foi localizado a linha digitável para geração do arquivo!"
                        Exit Function
                    End If
                End If
                Set oRegExp = Nothing
            Else
                'Camara Centralizadora
                strLinha = strLinha & Format(.Fields("cd_camara_centralizadora").value, "000")
                'Código do Banco do Favorecido
                strLinha = strLinha & formatCampoInt(.Fields("nr_camara").value, 3)
                'Agência Favorecido
                strLinha = strLinha & formatCampoInt(.Fields("nr_agencia").value, 5)
                'DV Agência Favorecido
                strLinha = strLinha & UCase(formatCampoStr(.Fields("nr_digitoAgencia").value, 1))
                'Conta do Favorecido
                strLinha = strLinha & formatCampoInt(.Fields("nr_contaCorrente").value, 12)
                'DV Conta
                strLinha = strLinha & UCase(formatCampoStr(.Fields("nr_digitoConta").value, 1))
                If Len(Trim(.Fields("nr_digitoConta").value)) = 2 Then
                    strLinha = strLinha & UCase(Right(.Fields("nr_digitoConta").value, 1))
                Else
                    strLinha = strLinha & " "
                End If
            End If
            
            'Empresa
            strLinha = strLinha & UCase(formatCampoStr(GetFieldValue("Razão", "Empresas", "Apel = '" & .Fields("cd_empresa").value & "'"), 30))
            
            Dim aCampos(2) As String
            'Numero do Documento Atribuido pela Empresa
            aCampos(0) = UCase(formatCampoStr(.Fields("nr_documento").value, 20))
            'Data para lançamento do debito
            aCampos(1) = Format(CDate(.Fields("dt_vencimento").value), "ddmmyyyy")
            'Valor a Debitar ou Creditar
            aCampos(2) = formatCampoInt(Replace(Format(.Fields("vlr_titulo").value, "0.00"), ",", ""), 15)
            If mlngCamaraOrigem <> 341 Or (mlngCamaraOrigem = 341 And InStr(1, "000;001;002;003;", Format(.Fields("cd_movimento").value, "000"))) Then
                curTotalValores = curTotalValores + StrToCur(.Fields("vlr_titulo").value)
            End If
            
            strLinha = strLinha & IIf(bItauSegmentoJ, aCampos(1), aCampos(0))
            strLinha = strLinha & IIf(bItauSegmentoJ, formatCampoInt(Replace(Format(.Fields("vlr_titulo").value _
                - .Fields("vlr_abatimento").value + .Fields("vlr_acrescimo").value, "0.00"), ",", ""), 15), aCampos(1))
            
            If bItauSegmentoJ Then
                strLinha = strLinha & formatCampoInt(Replace(Format(.Fields("vlr_abatimento").value, "0.00"), ",", ""), 15)
                strLinha = strLinha & formatCampoInt(Replace(Format(.Fields("vlr_acrescimo").value, "0.00"), ",", ""), 15)
                Dim dDataPagamento As Variant
                If (.Fields("tp_documento").value = "Lan") Then
                    dDataPagamento = GetFieldValue("Pagamento", "Lançamentos", "Código = " & .Fields("nr_documento").value & " AND PagRec = 'P' AND Parcela = " & .Fields("nr_parcela").value, , Empty)
                Else
                    dDataPagamento = GetFieldValue("Pagamento", "Duplicatas", "Nota = " & .Fields("nr_documento").value & " AND PagRec = 'P' AND Parcela = " & .Fields("nr_parcela").value & " AND tipo = '" & .Fields("tipo_registro").value & "' AND Empresa = '" & .Fields("cd_empresa").value & "'", , Empty)
                End If
                strLinha = strLinha & IIf(dDataPagamento = Empty, aCampos(1), Format(CDate(dDataPagamento), "ddmmyyyy"))
                strLinha = strLinha & aCampos(2)
                strLinha = strLinha & formatCampoInt(0, 15)
                strLinha = strLinha & aCampos(0)
                strLinha = strLinha & Space(28)
            Else
                'Tipo da Moeda
                strLinha = strLinha & "BRL"
                'Quantidade da Moade
                strLinha = strLinha & formatCampoInt(0, 15)
                'Valor a Debitar ou Creditar
                strLinha = strLinha & aCampos(2)
                'Nº Documento atribuido pelo banco(Uso do Banco)
                strLinha = strLinha & Space(20)
                'Data do Lançamento e Valor efetivos(Uso do Banco)
                strLinha = strLinha & formatCampoInt(0, 23)
                'Outras Informações e FEBRABAN
                strLinha = strLinha & Space(52)
                'Aviso ao Favorecido(0 = Não)
                strLinha = strLinha & "0"
            End If
            'Rservado para o Banco
            strLinha = strLinha & Space(10)
            mobjArquivo.add (strLinha)
            'Se for DOC e Ted o segmento B é obrigatório
            If sSegmentoOrigem = "A" And Format(.Fields("cd_forma_lancamento").value, "00") = "03" Then
                If GeraDetalheSegmentoB(strErro, intLote, intCont, rstResult) Then
                    mlngQtdRegistrosArq = mlngQtdRegistrosArq + 1
                Else
                    GeraDetalheLote = False
                    Exit Function
                End If
            ElseIf sSegmentoOrigem = "J" And InStr(1, "30;31;", Format(.Fields("cd_forma_lancamento").value, "00")) Then
                If GeraDetalheSegmentoJ52(strErro, intLote, intCont, rstResult) Then
                    mlngQtdRegistrosArq = mlngQtdRegistrosArq + 1
                Else
                    GeraDetalheLote = False
                    Exit Function
                End If
            End If
            mlngQtdRegistrosArq = mlngQtdRegistrosArq + 1
            .MoveNext
        Wend
    End With
    intQtdRegistro = intCont
    GeraDetalheLote = True
    Exit Function
    
ErroDetalheLote:
    GeraDetalheLote = False
    strErro = err.Description
End Function

Private Function GeraDetalheSegmentoB(strErro As String, intLote As Integer, ByRef intCont As Integer, rstResult As Object) As Boolean
    Dim strLinha   As String
    Dim strRua     As String
    Dim StrNumero  As String
    Dim strCep     As String
    Dim strCNPJCPF As String
    
On Error GoTo HeaderLotaSegmentoB
    
    intCont = intCont + 1
    'Codigo do Banco
    strLinha = formatCampoInt(CStr(mlngCamaraOrigem), 3)
    'Lote Serviço
    strLinha = strLinha & formatCampoInt(CStr(intLote), 4)
    'Registro Detalhe do Lote
    strLinha = strLinha & "3"
    'Sequencial do Registro
    strLinha = strLinha & formatCampoInt(CStr(intCont), 5)
    'Codigo do Segmento
    strLinha = strLinha & "B"
    'FEBRABAN
    strLinha = strLinha & Space(3)
    strCNPJCPF = limpaDOC(GetFieldValue("[CNPJ/CPF]", "Empresas", "Apel = '" & rstResult.Fields("cd_empresa").value & "'", , 0))
    If Len(strCNPJCPF) = 11 Then
        strLinha = strLinha & "1"
    Else
        strLinha = strLinha & "2"
    End If
    'CNPJ/CPF do Favorecido
    strLinha = strLinha & formatCampoInt(strCNPJCPF, 14)
    'Separa a rua do número
    Call GetEndereco(strRua, StrNumero)
    'Nome da Rua
    strLinha = strLinha & UCase(formatCampoStr(strRua, 30))
    'Número
    strLinha = strLinha & formatCampoInt(StrNumero, 5)
    'Complemento
    strLinha = strLinha & Space(15)
    'Bairro
    strLinha = strLinha & formatCampoStr(EmpresaUsuaria.Bairro, 15)
    'Cidade
    strLinha = strLinha & UCase(formatCampoStr(EmpresaUsuaria.Cidade, 20))
    'CEP e Complemento
    strCep = limpaDOC(EmpresaUsuaria.Cep)
    If Len(Trim(strCep)) > 0 Then
        strLinha = strLinha & formatCampoInt(Left(strCep, 5), 5)
        strLinha = strLinha & UCase(formatCampoStr(Right(limpaDOC(EmpresaUsuaria.Cep), 3), 3))
    Else
        strLinha = strLinha & formatCampoInt("0", 5)
        strLinha = strLinha & Space(3)
    End If
    'UF
    strLinha = strLinha & UCase(formatCampoStr(EmpresaUsuaria.Estado, 2))
    'Data do Vencimento
    strLinha = strLinha & Format(CDate(rstResult.Fields("dt_vencimento").value), "ddmmyyyy")
    'Valor do Documento
    strLinha = strLinha & formatCampoInt(Replace(StrToCur(rstResult.Fields("vlr_titulo").value), ",", ""), 15)
    'Abatimento
    strLinha = strLinha & formatCampoInt("0", 15)
    'Desconto
    strLinha = strLinha & formatCampoInt(Replace(StrToCur(GetValue(rstResult, "vlr_abatimento", 0)), ",", ""), 15) 'Jogar o valor do abatimento do titulo
    'Mora Diária
    strLinha = strLinha & formatCampoInt(Replace(StrToCur(GetValue(rstResult, "vlr_acrescimo", 0)), ",", ""), 15) 'Jogar o valor do acrescimo do titulo
    'Multa
    strLinha = strLinha & formatCampoInt(Replace(StrToCur(GetValue(rstResult, "vlr_multa", 0)), ",", ""), 15) 'Jogar o valor da multa
    'Código do Favorecido
    strLinha = strLinha & Space(15)
    'FEBRABAN
    strLinha = strLinha & Space(15)
    mobjArquivo.add (strLinha)
    GeraDetalheSegmentoB = True
    Exit Function
    
HeaderLotaSegmentoB:
    GeraDetalheSegmentoB = False
    strErro = err.Description
End Function
'Demanda 222036 - Autor Yuji - Mapeamento do segmento J para o Itaú'Demanda 222036 - Autor Yuji - Mapeamento do segmento J para o Itaú
Private Function GeraDetalheSegmentoJ52(strErro As String, intLote As Integer, ByRef intCont As Integer, rstResult As Object) As Boolean
    Dim strLinha   As String
    Dim strCNPJCPF As String
    
On Error GoTo DetalheSegmentoJ52
    
    intCont = intCont + 1
    'Codigo do Banco
    strLinha = formatCampoInt(CStr(mlngCamaraOrigem), 3)
    'Lote Serviço
    strLinha = strLinha & formatCampoInt(CStr(intLote), 4)
    'Registro Detalhe do Lote
    strLinha = strLinha & "3"
    'Sequencial do Registro
    strLinha = strLinha & formatCampoInt(CStr(intCont), 5)
    'Codigo do Segmento
    strLinha = strLinha & sSegmentoOrigem
    
    With rstResult
        'Tipo de Movimento
        strLinha = strLinha & Format(.Fields("cd_movimento").value, "000")
        strLinha = strLinha & "52" ' Identificação de registro opcional
        strLinha = strLinha & IIf(Len(limpaDOC(EmpresaUsuaria.CNPJ)) = 11, "1", "2") 'Tipo Inscrição Pagador
        strLinha = strLinha & formatCampoInt(limpaDOC(EmpresaUsuaria.CNPJ), 15) 'CNPJ Pagador
        strLinha = strLinha & formatCampoStr(EmpresaUsuaria.Razao, 40) ' Nome do Pagador
        
        strCNPJCPF = limpaDOC(GetFieldValue("[CNPJ/CPF]", "Empresas", "Apel = '" & .Fields("cd_empresa").value & "'", , 0))
        strLinha = strLinha & IIf(Len(strCNPJCPF) = 11, "1", "2") 'Tipo Inscrição Beneficiário
        'CNPJ/CPF do Favorecido
        strLinha = strLinha & formatCampoInt(strCNPJCPF, 15)
        'Empresa
        strLinha = strLinha & UCase(formatCampoStr(GetFieldValue("Razão", "Empresas", "Apel = '" & .Fields("cd_empresa").value & "'"), 40))
        strLinha = strLinha & formatCampoInt("0", 16)
        strLinha = strLinha & Space(93)
    End With

    mobjArquivo.add (strLinha)
    GeraDetalheSegmentoJ52 = True
    Exit Function
    
DetalheSegmentoJ52:
    GeraDetalheSegmentoJ52 = False
    strErro = err.Description
End Function
Private Function GeraTrailerLote(ByRef strErro As String, intQtdRegistro As Integer, curTotalValores As Currency, curTotalMoedas As Currency, intLote As Integer) As Boolean
    Dim strLinha As String
    
On Error GoTo ErroTrailerLote
    'Codigo do Banco
    strLinha = formatCampoInt(CStr(mlngCamaraOrigem), 3)
    'Lote Serviço
    strLinha = strLinha & formatCampoInt(CStr(intLote), 4)
    'Registro Trailer do Lote
    strLinha = strLinha & "5"
    'FEBRABAN
    strLinha = strLinha & Space(9)
    'Qtd Registros do Lote
    strLinha = strLinha & formatCampoInt(CStr(intQtdRegistro + 2), 6)
    'Somatório dos valores
    strLinha = strLinha & formatCampoInt(CStr(Replace(Format(curTotalValores, "0.00"), ",", "")), 18)
    'Somatório das Moedas
    strLinha = strLinha & formatCampoInt(0, 18)
    'FEBRABAN e Retorno(Uso do Banco)
    strLinha = strLinha & Space(181)
    mobjArquivo.add (strLinha)
    mlngQtdRegistrosArq = mlngQtdRegistrosArq + 1
    GeraTrailerLote = True
    Exit Function
    
ErroTrailerLote:
    GeraTrailerLote = False
    strErro = err.Description
End Function

Private Function geraTrailerArquivo(strErro) As Boolean
    Dim strLinha As String
    
On Error GoTo ErroTrailerArquivo
    'Codigo do Banco
    strLinha = formatCampoInt(CStr(mlngCamaraOrigem), 3)
    'Lote Serviço
    strLinha = strLinha & "9999"
    'Registro Trailer do Lote
    strLinha = strLinha & "9"
    'FEBRABAN
    strLinha = strLinha & Space(9)
    'Quantidade de Lotes
    strLinha = strLinha & formatCampoInt(CStr(mintQtdLotes), 6)
    'Quantidade de Registros
    mlngQtdRegistrosArq = mlngQtdRegistrosArq + 1
    strLinha = strLinha & formatCampoInt(CStr(mlngQtdRegistrosArq), 6)
    'Quantidade de Bancos do Arquivo
    strLinha = strLinha & formatCampoInt(0, 6)
    'FEBRABAN
    strLinha = strLinha & Space(205)
    mobjArquivo.add (strLinha)
    geraTrailerArquivo = True
    Exit Function
    
ErroTrailerArquivo:
    geraTrailerArquivo = False
    strErro = err.Description
End Function

Private Sub GetEndereco(ByRef strRua As String, ByRef StrNumero As String)
    Dim strEndereco() As String
    Dim intCont       As Integer
    Dim intContNumero As Integer
    Dim intPtrVetor   As Integer
    Dim blnInseriuNum As Boolean
    
    ReDim strEndereco(Len(EmpresaUsuaria.Endereco))
    intPtrVetor = 1
    For intCont = 0 To Len(EmpresaUsuaria.Endereco)
        strEndereco(intCont) = Mid(EmpresaUsuaria.Endereco, intPtrVetor, 1)
        intPtrVetor = intPtrVetor + 1
    Next
    blnInseriuNum = False
    For intCont = 0 To UBound(strEndereco)
        If Not IsNumeric(strEndereco(intCont)) Then
            If strEndereco(intCont) <> "," Then
                strRua = strRua & strEndereco(intCont)
            End If
        Else
            For intContNumero = intCont To UBound(strEndereco)
                If IsNumeric(strEndereco(intContNumero)) Then
                    StrNumero = StrNumero & strEndereco(intContNumero)
                Else
                    Exit For
                End If
            Next intContNumero
            Exit For
        End If
    Next
End Sub

'Date.......: 21/10/2008
'Author.....: Ivo Sousa
'Descrição..: Valida o arquivo que foi passado pelo usuario
'Retorno....: [Boolean] Se houver erro, retorna o mesmo
Public Function ValidaArquivo(lngAgencia As Long, strDvAgencia As String, lngConta As Long, strDvConta As String, strCarteira As String, strArquivo As String, ByRef strErro As String) As Boolean
    Dim objPagForRetorno240 As clsPagForCNAB240BancoBrasil
    Dim intIndex            As Integer
    Dim intContDetail       As Integer
    Dim ContRegistros       As Integer
    
    ContRegistros = 0
    Call mobjArquivo.Carregar(strArquivo)
    If mlngCamaraOrigem <> 237 Then
        mlngCamaraOrigem = Left(mobjArquivo.getLinha(1), 3)
    End If
    'Ivo Sousa (08/01/2009) - Verifica se o registro é de retorno
    If Mid(mobjArquivo.getLinha(1), 143, 1) = 2 Or UCase(Right(strArquivo, 4)) = ".RET" Then
        Select Case formatCampoInt(CStr(mlngCamaraOrigem), 3)
            'Banco do Brasil
            Case "001"
                Set objPagForRetorno240 = New clsPagForCNAB240BancoBrasil
                'Carrega o Arquivo texto
                objPagForRetorno240.Camara = mlngCamaraOrigem
                objPagForRetorno240.Agencia = lngAgencia
                objPagForRetorno240.DVAgencia = strDvAgencia
                objPagForRetorno240.conta = lngConta
                If Len(strDvConta) > 1 Then
                    objPagForRetorno240.DVConta = Left(strDvConta, 1)
                    objPagForRetorno240.DVAgConta = Right(strDvConta, 1)
                Else
                    objPagForRetorno240.DVConta = strDvConta
                End If
                objPagForRetorno240.objArquivo = mobjArquivo
                If Not objPagForRetorno240.ValidaArquivo(strErro) Then
                    ValidaArquivo = False
                    Exit Function
                End If
                Set mcolDocumentos = objPagForRetorno240.ColDocumentos
                Set mcolErros = objPagForRetorno240.ColErrosLote
                ValidaArquivo = True
            Case "341"
                Set objPagForRetorno240 = New clsPagForCNAB240BancoBrasil
                'Carrega o Arquivo texto
                objPagForRetorno240.Camara = mlngCamaraOrigem
                objPagForRetorno240.Agencia = lngAgencia
                objPagForRetorno240.DVAgencia = strDvAgencia
                objPagForRetorno240.conta = lngConta
                If Len(strDvConta) > 1 Then
                    objPagForRetorno240.DVConta = Left(strDvConta, 1)
                    objPagForRetorno240.DVAgConta = Right(strDvConta, 1)
                Else
                    objPagForRetorno240.DVConta = strDvConta
                End If
                objPagForRetorno240.objArquivo = mobjArquivo
                If Not objPagForRetorno240.ValidaArquivo(strErro) Then
                    ValidaArquivo = False
                    Exit Function
                End If
                Set mcolDocumentos = objPagForRetorno240.ColDocumentos
                Set mcolErros = objPagForRetorno240.ColErrosLote
                ValidaArquivo = True
            Case "237"
                Set objPagForRetorno240 = New clsPagForCNAB240BancoBrasil
                                
                objPagForRetorno240.Banco = mlngBancoDestino
                objPagForRetorno240.Camara = mlngCamaraOrigem
                objPagForRetorno240.Agencia = lngAgencia
                objPagForRetorno240.DVAgencia = strDvAgencia
                objPagForRetorno240.conta = lngConta
                If Len(strDvConta) > 1 Then
                    objPagForRetorno240.DVConta = Left(strDvConta, 1)
                    objPagForRetorno240.DVAgConta = Right(strDvConta, 1)
                Else
                    objPagForRetorno240.DVConta = strDvConta
                End If
                objPagForRetorno240.objArquivo = mobjArquivo
                If Not objPagForRetorno240.ValidaArquivo(strErro) Then
                    ValidaArquivo = False
                    Exit Function
                End If
                Set mcolDocumentos = objPagForRetorno240.ColDocumentos
                Set mcolErros = objPagForRetorno240.ColErrosLote
                ValidaArquivo = True
            Case Else
                strErro = "O arquivo que está sendo validado não é de retornos." & vbNewLine & "Layout de retorno preparado somente para o Banco do Brasil."
        End Select
    Else
        'mcolErros.add ("O arquivo selecionado não é de retorno.")
        
        'Projeto: #1203 - História: # - Desenvolvimento# - João Henrique(25/04/2012)
        strErro = "O arquivo selecionado não é de retorno."
    End If
    Set objPagForRetorno240 = Nothing
End Function

'Ivo (28/07/2017) - Metodo para calculo do digito verificador
Public Function DigitoVerificador(StrNumero As String, lngModulo As Long, blnAgrupaNumero As Boolean, blnCodigoBarras As Boolean, ParamArray lngPeso() As Variant) As String
    Dim strMultiplicadores As String
    Dim intIndex     As Integer
    Dim strResultado As String
    Dim lngTotal     As Long
    
    If blnCodigoBarras Then
        blnAgrupaNumero = False
    End If
    While Len(strMultiplicadores) < Len(StrNumero)
        For intIndex = 0 To UBound(lngPeso)
            If Len(strMultiplicadores) < Len(StrNumero) Then
                strMultiplicadores = lngPeso(intIndex) & strMultiplicadores
            End If
        Next
    Wend
    For intIndex = Len(StrNumero) To 1 Step -1
        strResultado = (Mid(StrNumero, intIndex, 1) * Mid(strMultiplicadores, intIndex, 1))
        If Len(strResultado) > 1 And blnAgrupaNumero Then
            strResultado = CInt(Left(strResultado, 1)) + CInt(Right(strResultado, 1))
        End If
        lngTotal = lngTotal + strResultado
    Next
    lngTotal = lngTotal Mod lngModulo
    'Tratamento específico para o código de barras conforme o manual.
    If Not blnCodigoBarras Then
        If lngTotal < 10 Then
            lngTotal = lngModulo - lngTotal
        End If
        If lngTotal > 9 Then
            lngTotal = 0
        End If
    Else
        If lngTotal = 0 Or lngTotal = 10 Or lngTotal = 1 Then
            lngTotal = 1
        End If
    End If
    DigitoVerificador = lngTotal
End Function
